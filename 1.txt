
count: 0
node.kind: SourceFile
// input.ts
function add(a: number, b: number): number {
    return a + b;
}
const multiply = (a: number, b: number): number => {
    let add2 = (a: number, b: number): number => {
        return a + 2 * b;
    };
    return add2(a, b) + a * b;
};
class Calculator {
    divide(a: number, b: number): number {
        if (b === 0) {
            add(a, b);
            throw new Error('Division by zero');
        }
        return a / b + multiply(a, b);
    }
}



count: 1
node.kind: FunctionDeclaration
function add(a: number, b: number): number {
    return a + b;
}


count: 2
node.kind: FirstStatement
const multiply = (a: number, b: number): number => {
    let add2 = (a: number, b: number): number => {
        return a +  * b;
    };
    return add2(a, b) + a * b;
};


count: 3
node.kind: VariableDeclarationList
const multiply = (a: number, b: number): number => {
    let add2 = (a: number, b: number): number => {
        return a +  * b;
    };
    return add2(a, b) + a * b;
}


count: 4
node.kind: VariableDeclaration
multiply = (a: number, b: number): number => {
    let add2 = (a: number, b: number): number => {
        return a +  * b;
    };
    return add2(a, b) + a * b;
}


count: 5
node.kind: Identifier
multiply


count: 6
node.kind: ArrowFunction
(a: number, b: number): number => {
    let add2 = (a: number, b: number): number => {
        return a +  * b;
    };
    return add2(a, b) + a * b;
}


count: 7
node.kind: ClassDeclaration
class Calculator {
    divide(a: number, b: number): number {
        if (b === ) {
            add(a, b);
            throw new Error();
        }
        return a / b + multiply(a, b);
    }
}


count: 8
node.kind: Identifier
Calculator


count: 9
node.kind: MethodDeclaration
divide(a: number, b: number): number {
    if (b === ) {
        add(a, b);
        throw new Error();
    }
    return a / b + multiply(a, b);
}

